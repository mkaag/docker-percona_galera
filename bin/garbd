#!/bin/bash
#
# This script is designed to be run inside the container
#

# fail hard and fast even on pipelines
set -eo pipefail

# set debug based on envvar
[[ $DEBUG ]] && set -x

# configure etcd
export ETCD_PORT=${ETCD_PORT:-4001}
export ETCD="$HOST:$ETCD_PORT"
export ETCD_PATH=${ETCD_PATH:-/database}
export ETCD_TTL=${ETCD_TTL:-10}

# wait for etcd to be available
until etcdctl --no-sync -C $ETCD ls >/dev/null 2>&1; do
  echo "waiting for etcd at $ETCD..."
  sleep $(($ETCD_TTL/2))  # sleep for half the TTL
done

# wait until etcd has discarded potentially stale values
sleep $(($ETCD_TTL+1))

function etcd_set_default {
  etcdctl --no-sync -C $ETCD mk $ETCD_PATH/$1 $2 >/dev/null 2>&1 || true
}

function etcd_make_directory {
  etcdctl --no-sync -C $ETCD setdir $ETCD_PATH/$1 >/dev/null 2>&1 || true
}

MYSQL_USER=${MYSQL_USER:-admin}
MYSQL_PASS=${MYSQL_PASS:-admin}
REP_USER=${REP_USER:-replicator}
REP_PASS=${REP_PASS:-replicator}
CLUSTER=${CLUSTER:-galera}

PORT=${PORT:-4567}
PROTO=${PROTO:-tcp}

etcd_set_default engine percona
etcd_set_default credentials/adminUser ${MYSQL_USER}
etcd_set_default credentials/adminPass ${MYSQL_PASS}
etcd_set_default credentials/repUser ${REP_USER}
etcd_set_default credentials/repPass ${REP_PASS}
etcd_set_default cluster/name ${CLUSTER}
etcd_make_directory cluster/mysqlNodes
etcd_make_directory cluster/galeraEndpoints


# I don't want to be the first guy in the cluster.
while [[ -z $(etcdctl --no-sync -C $ETCD ls $ETCD_PATH/cluster/galeraEndpoints | awk -F/ '{print $6}' | xargs | sed 's/ /,/') ]]
do
  echo "waiting for other nodes"
  sleep 10
done

CLUSTER_MEMBERS=$(etcdctl --no-sync -C $ETCD ls $ETCD_PATH/cluster/galeraEndpoints | awk -F/ '{print $6}' | xargs | sed 's/ /,/')

garbd -a gcomm://$CLUSTER_MEMBERS?pc.wait_prim=no -g $CLUSTER -n $HOST &

SERVICE_PID=$!

echo $SERVICE_PID > /app/database.pid

# smart shutdown on SIGINT and SIGTERM
function on_exit() {
  kill -TERM $SERVICE_PID
  wait $SERVICE_PID 2>/dev/null
  exit 0
}
trap on_exit INT TERM

# wait for the service to become available
sleep 1 && while [[ -z $(netstat -lnt | awk "\$6 == \"LISTEN\" && \$4 ~ \".4567\" && \$1 ~ \"tcp.?\"") ]] ; do sleep 1; done

echo database-garbd running...

# publish the service to etcd using the injected HOST and PORT
if [[ ! -z $PUBLISH ]]; then

  set +e

  # wait for the service to become available on PUBLISH port
  sleep 1 && while [[ -z $(netstat -lnt | awk "\$6 == \"LISTEN\" && \$4 ~ \".$PUBLISH\" && \$1 ~ \"$PROTO.?\"") ]] ; do sleep 1; done

  # while the port is listening, publish to etcd
  while [[ ! -z $(netstat -lnt | awk "\$6 == \"LISTEN\" && \$4 ~ \".$PUBLISH\" && \$1 ~ \"$PROTO.?\"") ]] ; do
    etcdctl --no-sync -C $ETCD set $ETCD_PATH/cluster/galeraEndpoints/$HOST:4567 $HOST:4567 --ttl $ETCD_TTL >/dev/null
    sleep $(($ETCD_TTL/2)) # sleep for half the TTL
  done

  # if the loop quits, something went wrong
  exit 1

fi

wait
